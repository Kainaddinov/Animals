/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }


 @font-face {
  font-family: Lato;
  src: url(./Shrifts/Lato-Bold.woff2),
  url(./Shrifts/Lato-Regular.woff2);
 }



html, body {
    background: rgba(0, 0, 0, 0.30);;
    background: url(./images/ocean.png) lightgray 50% / cover no-repeat;
    font-family: Lato;
    background-size: cover; /* Покрывает всю область без искажений */
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    height: 100vh;
    width: 100vw;
    overflow-x: hidden;
  }
  






a,
button,
input,
textarea,
svg *{
  transition-duration: 0.2s;
}

a{
  color: #FFF;
}

a:hover{
  color: lightgray;
}

 .header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 20px;

 }

.header-logo{
  text-decoration: none;
  font-size: 40px;
  width: 113px;
  height: 4px;
  color: #FFF;
  align-items: center;
}

.header-logo{
  display: flex;
  padding-left: 119px;
  padding-top: 29px;
}

 .header-menu-list {
  display: flex;
  column-gap: 50px;
  padding-right: 163px;
  padding-top: 31px;

 }

 .header-menu-link {
  display: inline-flex;
  color: #FFF;
  align-items: center;
  height: 90px;
  text-decoration: none;
  font-weight: 700;
  font-size: 16px;
  letter-spacing: 1.2px;
 }



.button:hover{
  color: lightgray;
}

.button{
  display: inline-flex;
  align-items: center;
  height: 44px;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  border: none;
  border-radius: 15px;
  background: #62A0F2;
  font-family: Lato;
  color: #FFF;
 }

 
 .banner-body{
  height: 325.511px;
  color: #FFF;
  display: flex;
  flex-direction: column;
  row-gap: 22px;
  align-items: center;
  justify-content: flex-end;
 }

 .banner-title{
  display: flex;
  align-items: center;
  font-size: 280px;
  font-family: Lato;
  font-weight: 700;
  letter-spacing: 14px;
 }


.main-menu-nav{
  width: 80px;
}

 .main-menu-list {
  display:inline-flex;
  flex-direction: column; 
  row-gap: 30px; 
  padding-left: 54px;
  padding-top: 50px;
  left: 20px; 

}

.main-menu-link.active{
  color: #1AFF76;
}
.main-menu-link.active{
    color: #06B0CD;
}

.main-menu-link{
  font-family: Lato;
  font-weight: 700;
  font-size: 24px;
  text-decoration: none;
}

.vector{
  display: flex;
  flex-direction: column;
  row-gap: 22px;
  align-items: center;
  justify-content: flex-end;
  padding-top: 192px;
  padding-bottom: 68px;
}

.vector-title{
  font-family: Lato;
  font-weight: 700;
  font-size:32px;
  color: #FFF;
}

.vector-link-img{
  display: flex;
  width: 100px;
  height: 20px;
  flex-shrink: 0;
  flex-direction: column;
  align-items: center;
  gap: 22px;
  flex-shrink: 0;
}